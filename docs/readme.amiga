
 distributed.net client for AmigaOS (68k/PPC)
 Released by Oliver Roberts <oliver@futaura.co.uk>
 Document revision $Id: readme.amiga,v 1.15 2008/12/30 13:24:41 andreasb Exp $
                                                          
 Welcome to the distributed.net client.

 This document covers information specific to the client for AmigaOS.
 Refer to other enclosed documentation or browse the online FAQ at
 http://faq.distributed.net/ for non-platform-specific documentation.

    1.0  System requirements
    2.0  Getting started
    3.0  AmigaOS client specific notes
         3.1 Ensuring stack size is large enough
         3.2 Setting the time zone
         3.3 Packets and work units?
         3.4 Dial-up detection caveats
    4.0  GUI for AmigaOS clients
         4.1 Preferences and options
         4.2 ARexx commands 
         4.3 Myzar - MUI front-end for the client
    5.0  Credits & thank yous

 1.0  System requirements --------------------------------------------

     - AmigaOS 2.04 or greater (3.0 if you're running the PPC client)
     - A TCP stack compatible with AmiTCP 3.0 or newer.
       There are several, such as Miami, Genesis, TermiteTCP for example.
       Also AS225R2 with a special emulation library, look on the Amiga 
       effort homepage/misc section for the archive link (address below).
     - ClassAct or ReAction GUI classes are required in order to use the
       built-in GUI (will use shell output if not present).

    There are current four versions of the client: a 68k version (with
    cores optimized for each CPU type of the 68k family) and three PowerPC
    versions (AmigaOS 4, WarpOS and PowerUp).  Choose the PPC version
    according to your installed system.

     The 68k version requires:
     - An 68000 or higher. An 040 or preferably 060 is HIGHLY recommended.

     The OS4 PPC version requires:
     - A 603e or higher PPC processor.
     - AmigaOS 4.0 pre-release or newer.
     - AltiVec cores require a G4 and kernel 51.12 or higher.
     - The Roadshow TCP/IP stack supplied with OS4.

     The WarpOS PPC version requires:
     - A 603e or higher PPC processor. Tested on 603e and 604e.
     - WarpUp Release 4.0 / powerpc.library 15.0 or higher.

     The PowerUp PPC version requires:
     - A 603e or higher PPC processor. Tested on 603e and 604e.
     - Ralph Schmidt's ppc.library version 46.30 or higher.
       Available from ftp://ftp.meanmachine.ch/pub/amiga/ppclib/
     - Stack must be set to at least 200000 bytes.
     - Also works under WarpUp with PPCLibEmu 0.8a or higher (although
       you should really use the native WarpOS version instead, of course).

 2.0  Getting started ------------------------------------------------

    To install the client, drag the client's drawer to a location of your
    choice and fire it up.  If you would like the client to be started
    automatically each time your boot, click the "Add to WBStartup" icon
    or run the client from a shell using the '-install' option - this
    will install an icon to your WBStartup drawer, which will run the
    client from where you actually placed the client's drawer (DO NOT copy
    the client into your WBStartup drawer).

    If you have never run the client before, it will initiate the
    menu-driven configuration. Save and quit when done, the 
    configuration file will be saved in the same directory as the 
    client. Then, simply restart the client. From that point on it will 
    use the saved configuration.
    
    The configuration options are fairly self-explanatory and can be run
    at any time by starting the client with the '-config' option or
    selecting 'Configure' in the GUI's menus.  A list of command line
    options is available by starting the client with '-help'.

    A detailed guide to the various configuration options is available
    online at http://faq.distributed.net/

 3.0  Notes ----------------------------------------------------------

    If you want to contribute to the Distributed Amiga team, visit the effort
    homepage at http://distributed.amiga.org/, it contains all the necessary
    info along with extensive information on usage, configuration, trouble
    shooting etc. 
    
    IMPORTANT: the client's default distributed.net ID is rc5@distributed.net.
    Unless you change this your work is wasted effort.
    The usage section on the Distributed Amiga pages contains all you need to
    know to change this.

  3.1  Ensuring stack size is large enough ---------------------------

    The 68k and OS4 clients always allocate their own suitably sized
    stack, so you should not need any special stack settings for these.
    Similarly with the WarpOS version, WarpOS programs always get
    assigned a largish stack.  However, if you're using the PowerUp
    version, you will need to set the stack to at least 200000 bytes,
    otherwise the client will exit telling you to increase the stack size
    (instead of running with the potential for crashes to happen).  Stack
    size can be increased by calling the stack command before running the
    client or by adjusting the stack value in the client's icon.

  3.2  Setting the time zone -----------------------------------------

    The client always displays the current time in UTC - not your local
    time!  For this to work correctly, you need to ensure your timezone
    is set correctly. This can be done through the Workbench Locale
    preferences program.  Of course, the drawback with using Locale is
    that daylight savings are not accounted for, except on OS4 where the
    Timezone preferences allow the client to handle daylight savings
    automatically. Ideally, on OS3.x I'd recommend installing SetDST
    (util/time/SetDST.lha on Aminet) which will handle it for you
    automatically - you need to use the SETLOCALE feature. Alternatively,
    you can manually adjust the timezone in Locale prefs whenever you
    start/end dst.  For example, if you are in the UK, you would set the
    timezone to GMT when not in dst, and to 1 hour from GMT (a zone to
    the right) when in dst.

  3.3  Packets and work units?

    If you are upgrading from the old 2.710x clients, you may not be
    familiar with the new terminology that has replaced "blocks".  The
    new clients refer to "packets" and "work units".  Descriptions of
    their meanings can be found at
    http://faq.distributed.net/cache/138.html

  3.4  Dial-up detection caveats

    If you choose to enable the dial-up detection feature of the client,
    please be aware that you will not be able to exit your TCP/IP stack
    software until the "Detected IP-link drop" message has been shown by
    the client (which happens within 5 seconds of going offline).  If
    you try to exit before that, the client will still be using
    bsdsocket.library, and your TCP/IP software will most likely complain.

    Also note that if you want to make use of the "automatic go online"
    feature (dials your ISP automatically when the client runs out of
    work), you will need to be using Miami, MiamiDx or Genesis.  This
    feature is not supported for other TCP/IP stack software.

 4.0  GUI for AmigaOS clients-----------------------------------------

    The clients now have their own simple built-in GUI (ClassAct/ReAction),
    which is enabled when running the client from Workbench (e.g. by
    double-clicking it's icon).  If starting the client from the Shell,
    the client will run in console mode, as before.  In GUI mode, the
    console output will be shown in the GUI, and the client(s) may be
    controlled by the menus.  If running both 68k and PPC clients, the
    clients will automatically share the same window.

  4.1  Preferences and options ---------------------------------------

    The GUI maybe be configured to your liking by using the preferences
    window, which can be accessed from the settings menu.  Additionally,
    the following tooltypes can be used in the client's icon:

    HIDE

      Specify this tooltype to cause the client to not open a window on
      startup, and show an icon and/or tools menu item (defaults to
      both, but may be changed in the preferences) on the Workbench
      instead.

  4.2  ARexx commands

    It is possible to control the clients with ARexx, via the DNETC.1
    port.  The following commands are available (will affect both
    clients if you are running both 68K and PPC clients):

    QUIT    - Shutdown the client(s) and exit
    HIDE    - Iconify/hide the GUI
    SHOW    - Uniconify/show the GUII
    PAUSE   - Pause the client(s)
    UNPAUSE - Unpause the client(s)
    UPDATE  - Flush the client(s) buffers and fetch new packets
    FETCH   - Fetch new packets for the client(s)
    FLUSH   - Flush the client(s) buffers
    RESTART - Restart the clients(s)
    CLEAR   - Clear the console window

  4.3  Myzar - alternative front-end for the client ------------------

    Myzar is a front-end for the client, and uses MUI.  Myzar preceded
    the built-in GUI, and if you prefer to use Myzar then it will still
    work fine with the new GUI enabled clients.  Myzar can be downloaded
    from http://www.crosswinds.net/~myzar/ . Note that the console output
    of the current clients isn't fully compatible with Myzar.

 5.0  Credits & thank yous--------------------------------------------
 
    -- Thanks to everybody involved in the development of the Amiga client
       and the beta testing process, who have helped make it what it is,
       including (in alphabetical order):

       - John Girvin (68k optimized RC5-64 cores)
       - Malcolm Howell (68k and PPC optimized RC5-72 cores)
       - Kriton Kyrimis (multi-core 68k OGR cores, support and ideas)
       - Roberto Patriarca (Myzar)
       - Tony Preston (support, testing, views and overall managament)
       - Roberto Ragusa (PPC 604e optimized RC5 cores)
       - Jacek Rzeuski (keyrate chart class code for Myzar)
       - Stefan Smietanowski (for porting previous clients to the Amiga -
         some crucial parts of his code are used in this version)
       - Dirk Stoecker (laborious testing of PowerUp client betas)
       - Thomas Tavoly (coordinator of the Distributed Amiga team)

    -- The whole Distributed Amiga team
       Without you there wouldn't be much of a point in doing the client, 
       so keep on cracking! Maybe YOU can find the key with the client.

    -- Finally, thanks to everybody involved with the gcc and libnix ports
       for AmigaOS, especially for version for WarpUp.  Thanks also to
       Sebastian Jedruszkiewicz for help with stripping the PowerUp
       version of the client, and Sam Jordan for his knowledge and support.
